@using Microsoft.AspNet.Identity.EntityFramework
@using Microsoft.AspNet.Identity
@inject RoleManager<IdentityRole> roleManager

<style>
    #divContent > .container {
        width: 100%;
    }
</style>
<div class="row">
    <div class="col-md-6">
        <!--Form-->
        <form action="#" class="form-horizontal" role="form" name="userForm">

            <div style="height:450px;">
                <div class="form-group hidden">
                    <label class="col-sm-3 control-label">Id：</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="tbId">
                    </div>
                </div>
                <div class="form-group">
                    <label for="tbUserName" class="col-sm-3 control-label">UserName：</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="tbUserName" required
                                oninvalid="setCustomValidity('UserName is required')" oninput="setCustomValidity('')">
                    </div>
                </div>
                <div class="form-group">
                    <label for="tbPassword" class="col-sm-3 control-label">Password：</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" required id="tbPassword">
                    </div>
                </div>

                <div class="form-group">
                    <label for="taScopes" class="col-sm-3 control-label">Roles：</label>
                    <div class="col-sm-9">
                        <textarea class="form-control" disabled="disabled" rows="3" id="taRoles"></textarea>
                    </div>

                </div>
                <div class="form-group" style="height:200px;overflow-x:hidden; overflow-y:auto;">
                    <div class="col-sm-offset-3 col-sm-9">
                        <div class="checkbox">
                            <label>
                                @{
                                var allRoles = roleManager.Roles.ToList();
                                foreach (var role in allRoles)
                                {
                                        <input name="ckRole" id="tb'@role'" class="rolecheck" value=@role.Name type="checkbox" />
                                        <label for="tb'@role'" style="font-weight:bold">@role.Name</label>
                                        <br />
                                }
                                }
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-9">
                    <button type="button" class="btn btn-warning" id="btnUserSave">保存</button>
                    <button type="button" class="btn btn-primary" id="btnUserEdit">修改</button>
                    <button type="button" class="btn btn-danger" id="btnUserDelete">删除</button>

                </div>
            </div>
        </form>
    </div>
    <div class="col-md-6">
        <table id="userTable"></table>
    </div>

</div>


<script type="text/javascript">

    var ShowAddButton = "add";
    var ShowEditAndDeleteButton = "edit_delete";

    $(document).ready(function () {
        InitTable();
        InitToolBarButton();
        ChangeButtonStatus(ShowAddButton);
    });

    $(".rolecheck:checkbox").click(function () {

        var chooseRoles = "";
        $("[name = ckRole]:checkbox").each(function () {
            if ($(this).is(":checked")) {
                chooseRoles += $(this).attr("value") + ";";

            }

        });
        $("#taRoles").val(chooseRoles);
    });

    function CancelChecked() {
        $(".rolecheck").attr("checked",false);
    }

    function InitTable()
    {
        $('#userTable').bootstrapTable({
            height:500,
            method: 'post',                 //The method type to request remote data.
            url: '/Settings/GetUserPageData',
            dataType: "json",               //The type of data that you are expecting back from the server.
            contentType:'application/json',
            pagination: true,               //True to show a pagination toolbar on table bottom.
            pageSize: 10,                   //初始化每页显示几条
            pageNumber:1,                   //初始化在第几页
            pageList: [10,25,50,100,200,'All'],
            sidePagination: "server",       //服务端请求
            idField:'Id',
            showRefresh:true,
            search:true,
            queryParams: ConstructQueryParams,
            //queryParamsType: "limit",
            locale:'en-US',
            columns: [{
                checkbox: true
            },
            {
                field: 'Id',
                title: 'Id',
                visible:false,
            },
            {
                field: 'UserName',
                title: 'UserName',
                sortable: true

            },
            {
                field: 'Roles',
                title: 'Roles',
                width:'60%',
                formatter: function (value, row, index) {

                    return ConstructRolesByUserName(row.UserName);
                }
            }
            ],
            onClickRow: function (row, element) {
                
                //清空所选行
                $('#userTable').bootstrapTable('uncheckAll');

                //选中所选行
                var rowIndex = element[0].rowIndex;
                $('#userTable').bootstrapTable('check', rowIndex - 1);
                SetUserDetail(row);
                ChangeButtonStatus();

            }

        });
    }

    function ConstructQueryParams(param)
    {
        var params = {
            limit: param.limit, //页面大小
            offset:param.offset,//偏移数量
            page: param.offset/param.limit, //页码

        };
        return params;
    }

    function InitToolBarButton()
    {
        $("#btnUserSave").click(function () {
            var userName = jQuery("#tbUserName").val();
            var password = jQuery("#tbPassword").val();
            var roles = jQuery("#taRoles").val();

            if (userName.trim() == "") {
                layer.alert("Please Input User Name", {
                    skin: 'layui-layer-molv'
                          , closeBtn: 0
                          , shift: 5 //动画类型
                });
                return;
            }

            var obj =
            {
                UserName: userName,
                Password: password,
                Roles: roles
            }

            jQuery.ajax({
                type: "post",//使用post方法访问后台
                dataType: "json",//返回json格式的数据
                url: "/Settings/CreateUser",
                data: obj,
                async: false,
                success: function (message) {
                    if (message.Success) {
                        //重新加载
                        Search();
                    } else {

                        layer.alert(message.Content, {
                            skin: 'layui-layer-lan'
                            , closeBtn: 0
                            , shift: 4 //动画类型
                        });
                        return;

                    }

                }
            });
        });

        $("#btnUserEdit").click(function () {
            layer.alert("Edit is not enabled", {
                skin: 'layui-layer-molv'
                           , closeBtn: 0
                           , shift: 5 //动画类型
            });
        });

        $("#btnUserDelete").click(function () {

            var selections = $('#userTable').bootstrapTable('getSelections');
            if(selections.length == 0)
            {
                layer.alert("Please select records", {
                    skin: 'layui-layer-molv'
                            ,closeBtn: 0
                            ,shift: 5 //动画类型
                });
                return ;
            }

            var userIds =[];
            for(var i=0;i<selections.length;i++)
            {
                var id = selections[i].Id;
                userIds.push(id);
            }

            //delete records
            var jsonUserId = JSON.stringify(userIds);
            $.ajax({
                type: "post",//使用get方法访问后台
                dataType: "json",//返回json格式的数据
                url: "/Settings/BachDeleteByUserId",
                data: {"UserIds":jsonUserId},
                async:false,
                success: function(message){
                    if(message.Success)
                    {
                        Search();
                    }else{
                        layer.alert(message.Content, {
                            skin: 'layui-layer-molv'
                            ,closeBtn: 0
                            ,shift: 5 //动画类型
                        });
                    }

                }
            });
        });
    }

    function ConstructRolesByUserName(userName) {

        var roleNames = '';
        $.ajax({
            type: "get",//使用get方法访问后台
            dataType: "json",//返回json格式的数据
            url: "/Settings/GetRolesByUserName",
            data: { "UserName": userName },
            async: false,
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    if (i == 0) {
                        roleNames += data[i];

                    } else {
                        roleNames += "、" + data[i];

                    }
                }

            }
        });
        return roleNames;

    }

    function EmptyUserDetail() {
        SetUserDetail(null);
    }

    function SetUserDetail(user) {
        
        if (user != null) {
            $("#tbId").val(user.Id);
            $("#tbUserName").val(user.UserName);
            $("#tbPassword").val(user.Password);
            $("#taRoles").val(user.Roles);
        } else {
            $("#tbId").val("");
            $("#tbUserName").val("");
            $("#tbPassword").val("");
            $("#taRoles").val("");

        }
    }

    function Search() {
        //重新加载
        $('#userTable').bootstrapTable('refresh');
        EmptyUserDetail();
        ChangeButtonStatus(ShowAddButton);
        CancelChecked();
    }

    function ChangeButtonStatus(eventType) {
        if (eventType == ShowAddButton) {
            $("#btnUserSave").show();
            $("#btnUserEdit").hide();
            $("#btnUserDelete").hide();

        } else {
            $("#btnUserSave").hide();
            $("#btnUserEdit").show();
            $("#btnUserDelete").show();
        }
    }
</script>   